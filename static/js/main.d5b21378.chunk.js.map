{"version":3,"sources":["components/ToDoItem.jsx","components/ToDoForm.jsx","components/ToDo.jsx","index.jsx"],"names":["ToDoItem","props","item","onCheck","onRemove","className","checked","onChange","id","name","onClick","e","preventDefault","ToDoForm","onSubmit","Form","useForm","form","layout","onFinish","values","resetFields","Item","placeholder","htmlType","type","ToDo","useState","todos","setTodos","idCount","setIdCount","index","findIndex","todo","splice","title","map","renderTodoItems","Header","Layout","Footer","Content","App","span","offset","ReactDOM","render","document","getElementById"],"mappings":"sQAGaA,EAAW,SAACC,GAAW,IAC1BC,EAA4BD,EAA5BC,KAAMC,EAAsBF,EAAtBE,QAASC,EAAaH,EAAbG,SAevB,OACE,qBAAIC,UAAU,YAAd,UACE,cAAC,IAAD,CACEC,QAASJ,EAAKI,QACdC,SAVc,WACdJ,GACFA,EAAQD,EAAKM,KAMb,SAGEN,EAAKO,OACP,cAAC,IAAD,CAAQC,QApBS,SAACC,GACpBA,EAAEC,iBAEER,GACFA,EAASF,EAAKM,KAgBd,sBAL6BN,EAAKM,K,kBCjB3BK,EAAW,SAACZ,GAAW,IAC1Ba,EAAab,EAAba,SADyB,EAElBC,IAAKC,UAAbC,EAF0B,oBAUjC,OACE,eAAC,IAAD,CAAMZ,UAAU,YAAYY,KAAMA,EAAMC,OAAQ,SAAUC,SAR3C,SAACC,GACZN,GACFA,EAASM,EAAOX,MAElBQ,EAAKI,eAIL,UACE,cAAC,IAAKC,KAAN,CAAWb,KAAK,OAAOJ,UAAU,kBAAjC,SACE,cAAC,IAAD,CAAOkB,YAAa,eAEtB,cAAC,IAAKD,KAAN,CAAWjB,UAAU,oBAArB,SACE,cAAC,IAAD,CAAQmB,SAAS,SAASC,KAAK,UAA/B,uBCdKC,EAAO,WAAO,IAAD,EACEC,mBAAS,CACjC,CAACnB,GAAI,EAAGC,KAAM,OAAQH,SAAS,GAC/B,CAACE,GAAI,EAAGC,KAAM,cAAeH,SAAS,KAHhB,mBACjBsB,EADiB,KACVC,EADU,OAKMF,mBAAS,IALf,mBAKjBG,EALiB,KAKRC,EALQ,KAoBlB3B,EAAW,SAACI,GAChB,IAAMwB,EAAQJ,EAAMK,WAAU,SAAAC,GAAI,OAAIA,EAAK1B,KAAOA,MAEnC,IAAXwB,IACFJ,EAAMO,OAAOH,EAAO,GACpBH,EAAS,YAAID,MAIXzB,EAAU,SAACK,GACf,IAAMwB,EAAQJ,EAAMK,WAAU,SAAAC,GAAI,OAAIA,EAAK1B,KAAOA,KAElD,IAAe,IAAXwB,EAAc,CAChB,IAAME,EAAON,EAAMI,GAEnBE,EAAK5B,SAAW4B,EAAK5B,QACrBsB,EAAMO,OAAOH,EAAO,EAAGE,GAEvBL,EAAS,YAAID,MAejB,OACE,eAAC,IAAD,CAAMQ,MAAO,WAAY/B,UAAU,YAAnC,UACE,cAAC,EAAD,CAAUS,SAbG,SAACL,GAChB,IAAMyB,EAAO,CACXzB,OACAD,GAAIsB,EACJxB,SAAS,GAGXuB,EAAS,GAAD,mBAAKD,GAAL,CAAYM,KACpBH,EAAWD,EAAU,MAMnB,cAAC,IAAD,IAjDoB,SAACF,GACvB,OACE,oBAAIvB,UAAU,YAAd,SACIuB,EAAMS,KAAI,SAAAH,GAAI,OAAI,cAAC,EAAD,CAEhBhC,KAAMgC,EACN9B,SAAUA,EACVD,QAASA,GAHJ+B,EAAK1B,SA8Cd8B,CAAgBV,OCrDhBW,G,cAA4BC,IAA5BD,QAAQE,EAAoBD,IAApBC,OAAQC,EAAYF,IAAZE,QAGlBC,EAAM,WACV,OACE,eAAC,IAAD,WACE,cAACJ,EAAD,IACA,cAACG,EAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAKE,KAAM,GAAIC,OAAQ,EAAGxC,UAAU,OAApC,SACE,cAAC,EAAD,UAIN,cAACoC,EAAD,QAKNK,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.d5b21378.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Button, Checkbox } from 'antd';\r\n\r\nexport const ToDoItem = (props) => {\r\n  const { item, onCheck, onRemove } = props;\r\n  const onRemoveItem = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (onRemove) {\r\n      onRemove(item.id);\r\n    }\r\n  }\r\n\r\n  const onCheckItem = () => {\r\n    if (onCheck) {\r\n      onCheck(item.id);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <li className=\"todo-item\" key={item.id}>\r\n      <Checkbox \r\n        checked={item.checked}\r\n        onChange={onCheckItem}\r\n      >{item.name}</Checkbox>\r\n      <Button onClick={onRemoveItem}>Remove</Button>\r\n    </li>\r\n  )\r\n}","import React from 'react';\r\nimport { Form, Input, Button } from 'antd';\r\n\r\nexport const ToDoForm = (props) => {\r\n  const { onSubmit } = props;\r\n  const [form] = Form.useForm();\r\n  const onFinish = (values) => {\r\n    if (onSubmit) {\r\n      onSubmit(values.name);\r\n    }\r\n    form.resetFields();\r\n  }\r\n\r\n  return (\r\n    <Form className=\"todo-form\" form={form} layout={'inline'} onFinish={onFinish}>\r\n      <Form.Item name=\"name\" className=\"todo-form-input\">\r\n        <Input placeholder={'New todo'} />\r\n      </Form.Item>\r\n      <Form.Item className=\"todo-form-actions\">\r\n        <Button htmlType=\"submit\" type=\"primary\">Add</Button>\r\n      </Form.Item>\r\n    </Form>\r\n  )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Card, Divider } from 'antd';\r\nimport { ToDoItem } from './ToDoItem';\r\nimport { ToDoForm } from './ToDoForm';\r\n\r\nexport const ToDo = () => {\r\n  const [todos, setTodos] = useState([\r\n    {id: 1, name: 'some', checked: false},\r\n    {id: 2, name: 'another one', checked: false}\r\n  ]);\r\n  const [idCount, setIdCount] = useState(10);\r\n\r\n  const renderTodoItems = (todos) => {\r\n    return (\r\n      <ul className=\"todo-list\">\r\n        { todos.map(todo => <ToDoItem \r\n            key={todo.id}\r\n            item={todo}\r\n            onRemove={onRemove} \r\n            onCheck={onCheck} \r\n          />) }\r\n      </ul>\r\n    )\r\n  }\r\n\r\n  const onRemove = (id) => {\r\n    const index = todos.findIndex(todo => todo.id === id);\r\n\r\n    if (index !== -1) {\r\n      todos.splice(index, 1);\r\n      setTodos([...todos]);\r\n    }\r\n  }\r\n\r\n  const onCheck = (id) => {\r\n    const index = todos.findIndex(todo => todo.id === id);\r\n    \r\n    if (index !== -1) {\r\n      const todo = todos[index];\r\n\r\n      todo.checked = !todo.checked;\r\n      todos.splice(index, 1, todo);\r\n\r\n      setTodos([...todos]);\r\n    }\r\n  }\r\n\r\n  const onSubmit = (name) => {\r\n    const todo = {\r\n      name,\r\n      id: idCount,\r\n      checked: false\r\n    };\r\n\r\n    setTodos([...todos, todo]);\r\n    setIdCount(idCount + 1);\r\n  } \r\n\r\n  return (\r\n    <Card title={'My todos'} className=\"todo-card\">\r\n      <ToDoForm onSubmit={onSubmit} />\r\n      <Divider />\r\n      { renderTodoItems(todos) }\r\n    </Card>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Layout, Row, Col } from 'antd';\r\n\r\nimport { ToDo } from './components/ToDo';\r\n\r\nimport 'antd/dist/antd.css'\r\nimport './index.css';\r\n\r\nconst { Header, Footer, Content } = Layout;\r\n\r\n\r\nconst App = () => {\r\n  return (\r\n    <Layout>\r\n      <Header></Header>\r\n      <Content>\r\n        <Row>\r\n          <Col span={12} offset={6} className=\"todo\">\r\n            <ToDo />\r\n          </Col>\r\n        </Row>\r\n      </Content>\r\n      <Footer></Footer>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}